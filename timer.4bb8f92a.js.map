{"version":3,"sources":["js/timer.js"],"names":["timer","start","startTime","Date","now","setInterval","currentTime","deltaTime","hours","mins","secs","getTimeComponents","console","log","pad","value","String","padStart","time","Math","floor"],"mappings":";;;AAmCC,aAnCD,QAAA,0BAEA,MAAMA,EAAQ,CACZC,QACQC,MAAAA,EAAYC,KAAKC,MAEvBC,YAAY,KACJC,MACAC,EADcJ,KAAKC,MACOF,GAC1B,MAAEM,EAAF,KAASC,EAAT,KAAeC,GAASC,EAAkBJ,GAMhDK,QAAQC,OAAOL,KAASC,KAAQC,MAC/B,OASP,SAASI,EAAIC,GACJC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnC,SAASN,EAAkBO,GAKlB,MAAA,CAAEV,MAJKM,EAAIK,KAAKC,MAAOF,EAAQ,MAAyB,OAI/CT,KAHHK,EAAIK,KAAKC,MAAOF,EAAQ,KAAoB,MAGnCR,KAFTI,EAAIK,KAAKC,MAAOF,EAAQ,IAAc","file":"timer.4bb8f92a.js","sourceRoot":"../src","sourcesContent":["import '../css/work-common.css';\n\nconst timer = {\n  start() {\n    const startTime = Date.now();\n\n    setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const { hours, mins, secs } = getTimeComponents(deltaTime);\n      //   console.log('currentTime', currentTime);\n      //   console.log('startTime', startTime);\n      //   console.log('Таймер запущен');\n      //   console.log(currentTime - startTime);\n      //   console.log(timeComponents); деструктуризация с { hours, mins, secs }\n      console.log(`${hours}:${mins}:${secs}`);\n    }, 1000);\n  },\n};\n\n// timer.start();\n\n/*\n * Принимает число, приводит к строке и добавляет в начало 0 если число меньше 2-х знаков\n */\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction getTimeComponents(time) {\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n  return { hours, mins, secs };\n}\n"]}